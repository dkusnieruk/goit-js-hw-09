{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAsCA,MAAMC,EAAUC,SAASC,kBAAkB,SAErCC,EAASF,SAASC,kBAAkB,QAEpCE,EAAUH,SAASC,kBAAkB,UAE3BD,SAASI,cAAc,UAE7BC,iBAAiB,SAASC,IAClCA,EAAMC,iBACN,MAAMC,EAAWL,EAAU,GAAGM,MACxBC,EAAMR,EAAQ,GAAGO,MACZV,EAAS,GAAGU,MAEzB,IAAIE,EAAU,EAEVC,EAAQC,aAAY,YAnDxB,SAAuBL,EAAUE,GACTI,KAAKC,SAAW,IAEpCC,QAAQC,IAAI,YACZC,EAAArB,GAASsB,OAAOC,QACd,uBAAuBZ,QAAeE,MACtC,CACAW,MAAM,QACNC,gBAAgB,EAChBF,QAAS,CACLG,WAAY,QACZC,UAAU,aAMhBR,QAAQC,IAAI,UACZC,EAAArB,GAASsB,OAAOC,QACd,sBAAsBZ,QAAeE,MACrC,CACAW,MAAM,QACNC,gBAAgB,EAChBF,QAAS,CACLG,WAAY,MACZC,UAAU,W,CA4BpBC,CAAcjB,EAASE,GAEnBC,GAAW,EAIPA,GAAWH,GACXkB,cAAcd,E,GAEnBF,EAAM","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    console.log('fullfill');\n    Notiflix.Notify.warning(\n      `✅ Fulfilled promise ${position} in ${delay}ms`,\n      {\n      width:`300px`,\n      useFontAwesome: true,\n      warning: {\n          background: `green`,\n          textColor:`white`,\n      }\n      },\n    );\n    // Fulfill\n  } else {\n    console.log('reject');\n    Notiflix.Notify.warning(\n      `❌ Rejected promise ${position} in ${delay}ms`,\n      {\n      width:`300px`,\n      useFontAwesome: true,\n      warning: {\n          background: `red`,\n          textColor:`white`,\n      }\n      },\n    );\n    // Reject\n  }\n}\n\n\n\nconst getDelay= document.getElementsByName(`delay`);\n\nconst getStep= document.getElementsByName(`step`);\n\nconst getAmount=document.getElementsByName(`amount`);\n\nconst getButton=document.querySelector(`button`);\nlet timerId;\ngetButton.addEventListener(`click`,(event)=>{\n  event.preventDefault();\n  const position = getAmount[0].value;\n  const delay=getStep[0].value;\n  const step=getDelay[0].value;\n\nlet counter = 0;\n\nlet timer = setInterval(function() {\n  \ncreatePromise(position,delay);\n\n    counter += 1;\n  \n\n\n    if (counter >= position) {\n        clearInterval(timer);\n    }\n}, delay);\n  \n});\n   \n// setTimeout(()=>{\n//   createPromise(position,delay)\n  \n// }, step);\n// const isSuccess = Math.random() > 0.3;\n\n\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$getDelay","document","getElementsByName","$47d4ff9957288465$var$getStep","$47d4ff9957288465$var$getAmount","querySelector","addEventListener","event","preventDefault","position","value","delay","counter","timer","setInterval","Math","random","console","log","$parcel$interopDefault","Notify","warning","width","useFontAwesome","background","textColor","$47d4ff9957288465$var$createPromise","clearInterval"],"version":3,"file":"03-promises.995f80d0.js.map"}